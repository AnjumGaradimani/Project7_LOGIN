{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjum.garadimani\\\\Desktop\\\\React UCourse\\\\PROJECT6_USEREDUCER\\\\usereducer-project6\\\\usereducer-Project6\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const ctx = useContext(AuthContext);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // useEffect(() => {\n  //   const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n  //   if (storedUserLoggedInInformation === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem(\"isLoggedIn\", \"1\");\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem(\"isLoggedIn\");\n  //   setIsLoggedIn(false);\n  // };\n\n  return (\n    /*#__PURE__*/\n    // <AuthContext.Provider\n    //   value={{\n    //     isLoggedIn: isLoggedIn,\n    //     onLogout: logoutHandler,\n    //   }}\n    // >\n    _jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n    // </AuthContext.Provider>\n  );\n}\n_s(App, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","Login","Home","MainHeader","AuthContext","App","ctx","isLoggedIn","loginHandler","logoutHandler"],"sources":["C:/Users/anjum.garadimani/Desktop/React UCourse/PROJECT6_USEREDUCER/usereducer-project6/usereducer-Project6/src/App.js"],"sourcesContent":["import React, { useContext } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/context/auth-context\";\n\nfunction App() {\n  const ctx = useContext(AuthContext);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // useEffect(() => {\n  //   const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n  //   if (storedUserLoggedInInformation === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem(\"isLoggedIn\", \"1\");\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem(\"isLoggedIn\");\n  //   setIsLoggedIn(false);\n  // };\n\n  return (\n    // <AuthContext.Provider\n    //   value={{\n    //     isLoggedIn: isLoggedIn,\n    //     onLogout: logoutHandler,\n    //   }}\n    // >\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login onLogin={loginHandler} />}\n        {ctx.isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n    // </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,mCAAmC;AAAC;AAE5D,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,GAAG,GAAGN,UAAU,CAACI,WAAW,CAAC;EACnC;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA,QAAC,KAAK,CAAC,QAAQ;MAAA,wBACb,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACd;QAAA,WACG,CAACE,GAAG,CAACC,UAAU,iBAAI,QAAC,KAAK;UAAC,OAAO,EAAEC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,EACnDF,GAAG,CAACC,UAAU,iBAAI,QAAC,IAAI;UAAC,QAAQ,EAAEE;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C;IAAA;MAAA;MAAA;MAAA;IAAA;IAET;EAAA;AAEJ;AAAC,GAxCQJ,GAAG;AAAA,KAAHA,GAAG;AA0CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}